{"version":3,"sources":["CameraControl.js"],"names":["cc","Class","extends","Component","properties","target","default","type","Node","camera","Camera","anim","Animation","jumpZoom","centerAtStart","smoothFollow","followX","visible","followY","minFollowDist","followRatio","overview","overviewTargets","overviewMargin","speedZoom","zoomInSpeed","zoomOutSpeed","canShake","shakeDuration","pointerPan","pointerXMult","pointerYMult","useBoundaries","topBound","bottomBound","leftBound","rightBound","cameraOffset","cameraOffsetPoints","Vec2","onLoad","startFollow","canvas","find","getComponent","Canvas","visibleSize","view","getVisibleSize","initZoomRatio","zoomRatio","node","position","convertToWorldSpaceAR","ZERO","previousPos","on","onMouseMove","onTouchMove","pointerPos","onEnable","director","getPhysicsManager","attachDebugDrawToCamera","onDisable","detachDebugDrawFromCamera","lateUpdate","dt","targetPos","parent","getOverviewTargetsMidpoint","xDelta","x","width","yDelta","y","height","pAdd","p","Math","abs","lerp","pDistance","convertToNodeSpaceAR","curSpeed","ratio","winSize","minX","maxX","minY","maxY","midPoint","i","length","distX","distY","max","shakeCamera","play","scheduleOnce","stopShake","bind","stop","event","getLocation"],"mappings":"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","file":"CameraControl.js","sourceRoot":"../../../../assets/Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        target: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        camera: cc.Camera,\r\n        anim: cc.Animation,\r\n        //Jump Zoom\r\n        jumpZoom: false,\r\n        centerAtStart: false,\r\n        //Smooth Follow\r\n        smoothFollow: false,\r\n        followX: {\r\n            default: 0,\r\n            visible () {\r\n                return this.smoothFollow;\r\n            }\r\n        },\r\n        followY: { \r\n            default: 0,\r\n            visible () {\r\n                return this.smoothFollow;\r\n            }\r\n        },\r\n        minFollowDist: {\r\n            default: 0,\r\n            visible () {\r\n                return this.smoothFollow;\r\n            }\r\n        },            \r\n        followRatio:{\r\n            default: 0,\r\n            visible () {\r\n                return this.smoothFollow;\r\n            }\r\n        },\r\n        //Overview\r\n        overview: false,\r\n        overviewTargets: {\r\n            default: [],\r\n            type: [cc.Node],\r\n            visible () {\r\n                return this.overview;\r\n            }            \r\n        },\r\n        overviewMargin: {\r\n            default: 0,\r\n            visible () {\r\n                return this.overview;\r\n            }\r\n        },        \r\n        //Speed Zoom\r\n        speedZoom: false,\r\n        zoomInSpeed: {\r\n            default: 0,\r\n            visible () {\r\n                return this.speedZoom;\r\n            }\r\n        },\r\n        zoomOutSpeed: {\r\n            default: 0,\r\n            visible () {\r\n                return this.speedZoom;\r\n            }\r\n        },\r\n        //Camera Shake\r\n        canShake: false,\r\n        shakeDuration: {\r\n            default: 0,\r\n            visible () {\r\n                return this.canShake;\r\n            }\r\n        },\r\n        //Pointer Pan\r\n        pointerPan: false,\r\n        pointerXMult: {\r\n            default: 0,\r\n            visible () {\r\n                return this.pointerPan;\r\n            }\r\n        },\r\n        pointerYMult: {\r\n            default: 0,\r\n            visible () {\r\n                return this.pointerPan;\r\n            }\r\n        },\r\n        //Boundaries in world position\r\n        useBoundaries: false,\r\n        topBound: {\r\n            default: 0,\r\n            visible () {\r\n                return this.useBoundaries;\r\n            }\r\n        },\r\n        bottomBound: {\r\n            default: 0,\r\n            visible () {\r\n                return this.useBoundaries;\r\n            }\r\n        },\r\n        leftBound: {\r\n            default: 0,\r\n            visible () {\r\n                return this.useBoundaries;\r\n            }\r\n        },\r\n        rightBound: {\r\n            default: 0,\r\n            visible () {\r\n                return this.useBoundaries;\r\n            }\r\n        },        \r\n        // Offset\r\n        cameraOffset: false,\r\n        cameraOffsetPoints: {\r\n            default: null,\r\n            type: cc.Vec2,\r\n            visible () {\r\n                return this.cameraOffset;\r\n            }\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.startFollow = false;\r\n        let canvas = cc.find('Canvas').getComponent(cc.Canvas); \r\n        this.visibleSize = cc.view.getVisibleSize();\r\n        this.initZoomRatio = this.camera.zoomRatio;\r\n        //place camera on target if centerAtStart\r\n        if (this.centerAtStart) {\r\n            this.node.position = this.target.convertToWorldSpaceAR(cc.Vec2.ZERO);\r\n        }\r\n        this.previousPos = this.node.position;\r\n        if (this.pointerPan) {\r\n            // this.jumpZoom = false;\r\n            this.overview = false;\r\n            this.speedZoom = false;\r\n            canvas.node.on('mousemove', this.onMouseMove, this);\r\n            canvas.node.on('touchmove', this.onTouchMove, this);\r\n            this.pointerPos = null;\r\n        }\r\n        if (this.overview) {\r\n            this.jumpZoom = false;\r\n            this.speedZoom = false;\r\n        }\r\n        if (this.speedZoom) {\r\n            this.jumpZoom = false;\r\n        }\r\n    },\r\n\r\n    onEnable: function () {\r\n        cc.director.getPhysicsManager().attachDebugDrawToCamera(this.camera);\r\n    },\r\n    onDisable: function () {\r\n        cc.director.getPhysicsManager().detachDebugDrawFromCamera(this.camera);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    lateUpdate: function (dt) {\r\n        let targetPos;\r\n\r\n        if (this.overview){\r\n            targetPos = this.target.parent.convertToWorldSpaceAR(this.getOverviewTargetsMidpoint());\r\n        } else {\r\n            targetPos = this.target.parent.convertToWorldSpaceAR(this.target.position);\r\n        }\r\n\r\n        if (this.pointerPan && this.pointerPos) {\r\n            let xDelta = this.pointerPos.x / (this.visibleSize.width/2) - 1;\r\n            let yDelta = this.pointerPos.y / (this.visibleSize.height/2) - 1;\r\n            xDelta *= this.pointerXMult;\r\n            yDelta *= this.pointerYMult;\r\n            targetPos = cc.pAdd(targetPos, cc.p(xDelta, yDelta));\r\n        }\r\n\r\n        //smooth follow\r\n        if (this.smoothFollow) {\r\n            if (Math.abs(targetPos.x - this.node.x) >= this.followX ||\r\n                Math.abs(targetPos.y - this.node.y) >= this.followY) {//when camera and target distance is larger than max distance\r\n                this.startFollow = true;\r\n            }\r\n            if (this.startFollow) {\r\n                this.node.position = this.node.position.lerp(targetPos,this.followRatio);\r\n                if (cc.pDistance(targetPos, this.node.position) <= this.minFollowDist) {\r\n                    this.startFollow = false;\r\n                }\r\n            }\r\n        } else {\r\n            this.node.position = this.node.parent.convertToNodeSpaceAR(targetPos);\r\n        }\r\n\r\n        //speed zoom\r\n        if (this.speedZoom) {\r\n            let curSpeed = Math.abs(this.previousPos.x - targetPos.x) / dt;\r\n            let ratio = 0;\r\n            if (curSpeed > this.zoomOutSpeed) {\r\n                ratio = 1 - (curSpeed - this.zoomOutSpeed) / (this.zoomInSpeed  - this.zoomOutSpeed);\r\n                this.camera.zoomRatio = cc.lerp(this.camera.zoomRatio, ratio, 0.02);\r\n            } else {\r\n                this.camera.zoomRatio = cc.lerp(this.camera.zoomRatio, this.initZoomRatio, 0.02);\r\n            }\r\n        }\r\n\r\n        this.previousPos = targetPos;\r\n        \r\n        //jump zoom\r\n        if (this.jumpZoom) {\r\n            let ratio = targetPos.y / cc.winSize.height;\r\n            this.camera.zoomRatio = 1 + (0.6 - ratio) * 0.35;\r\n        }\r\n\r\n        //boundaries\r\n\r\n        if (this.useBoundaries) {\r\n            let width = (this.visibleSize.width/2) / this.camera.zoomRatio;\r\n            let height = (this.visibleSize.height/2) / this.camera.zoomRatio;\r\n            let minX = this.node.x - width;\r\n            let maxX = this.node.x + width;  \r\n            let minY = this.node.y - height;\r\n            let maxY = this.node.y + height;\r\n            if (minX < this.leftBound) {\r\n                this.node.x = this.leftBound + width;\r\n            }\r\n            if (minY < this.bottomBound) {\r\n                this.node.y = this.bottomBound + height;\r\n            }\r\n            if (maxX > this.rightBound) {\r\n                this.node.x = this.rightBound - width;\r\n            }\r\n            if (maxY > this.topBound) {\r\n                this.node.y = this.topBound - height;\r\n            }\r\n        }\r\n    },\r\n\r\n    getOverviewTargetsMidpoint () {\r\n        let midPoint = cc.p(0, 0);\r\n        let minX = 99999, minY = 99999, maxX = -99999, maxY = -99999;\r\n        for (let i = 0; i < this.overviewTargets.length; ++i) {\r\n            let target = this.overviewTargets[i];\r\n            maxX = target.x > maxX ? target.x : maxX;\r\n            minX = target.x < minX ? target.x : minX;\r\n            maxY = target.y > maxY ? target.y : maxY;\r\n            minY = target.y < minY ? target.y : minY;\r\n        }\r\n        maxX += this.overviewMargin;\r\n        minX -= this.overviewMargin;\r\n        maxY += this.overviewMargin;\r\n        minY -= this.overviewMargin;\r\n        let distX = Math.abs(maxX - minX);\r\n        let distY = Math.abs(maxY - minY);\r\n        midPoint = cc.p(minX + distX/2, minY + distY/2);\r\n        let ratio = Math.max(distX / this.visibleSize.width, distY / this.visibleSize.height);\r\n        this.camera.zoomRatio = 1/ratio;\r\n        return midPoint;\r\n    },\r\n\r\n    shakeCamera () {\r\n        if (!this.canShake) return;\r\n        this.anim.play('shake');\r\n        this.scheduleOnce(this.stopShake.bind(this), this.shakeDuration);\r\n    },\r\n\r\n    stopShake () {\r\n        this.anim.stop();\r\n        this.camera.node.position = cc.p(0, 0);\r\n    },\r\n\r\n    onMouseMove (event) {\r\n        this.pointerPos = event.getLocation();\r\n    },\r\n\r\n    onTouchMove (event) {\r\n        this.pointerPos = event.getLocation();\r\n    }    \r\n});"]}