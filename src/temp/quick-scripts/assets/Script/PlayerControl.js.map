{"version":3,"sources":["PlayerControl.js"],"names":["MOVE_LEFT","MOVE_RIGHT","cc","Class","extends","Component","properties","speedX","speedY","bLeft","bRight","bTop","excalm","Node","msgBox","msgLabel","Label","portal","Sprite","bulb","underDoor","generator","picture","room1Sprites","default","type","SpriteFrame","onLoad","spine","node","getComponent","sp","Skeleton","console","log","goLeft","goRight","jump","interact","_up","body","RigidBody","registerInput","items","state","drawer","curItem","gameWon","that","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","active","scaleX","_walk","setAnimation","d","space","e","spriteFrame","setTimeout","y","string","toRight","rotateBy","runAction","scheduleOnce","changeScene","onKeyReleased","onCollisionEnter","other","group","game","groupList","groupIndex","name","onCollisionExit","update","dt","x","v2","linearVelocity","director","loadScene"],"mappings":"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","file":"PlayerControl.js","sourceRoot":"../../../../assets/Script","sourcesContent":["const MOVE_LEFT = 1;\nconst MOVE_RIGHT = 2;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        speedX: 0,\n        speedY: 0,\n        bLeft: 0,\n        bRight: 0,\n        bTop: 0,\n        excalm: cc.Node,\n        msgBox: cc.Node,\n        msgLabel: cc.Label,\n        portal: cc.Sprite,\n        bulb: cc.Sprite,\n        underDoor: cc.Node,\n        generator: cc.Sprite,\n        picture: cc.Node,\n        room1Sprites: {\n            default: [],\n            type: cc.SpriteFrame,\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.spine = this.node.getComponent(sp.Skeleton);\n        console.log(this.spine);\n        this.goLeft = false;\n        this.goRight = false;\n        this.jump = false;\n        this.interact = false;    \n        \n        this._up = false;\n        this.body = this.getComponent(cc.RigidBody);\n\n        this.registerInput();\n\n        // this.maxY = 0;\n        // this.minY = 0;\n\n        // Interactable items\n        this.items = {\n            portal: {\n                state: 0\n            },\n            drawer: {\n                state: 0\n            },\n            picture: {\n                state: 0,\n            },\n            generator: {\n                state: 0\n            }\n        }\n\n        // Current interactable item\n        this.curItem = \"\";\n        // Game won state\n        this.gameWon = false;\n    },\n        \n\n    registerInput () {\n        var that = this;\n        // Keyboard\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            onKeyPressed: function(keyCode, event) {\n                if (keyCode == cc.KEY.a && !that.msgBox.active) {\n                    that.goLeft = true;\n                    that.goRight = false;\n                    if (that.node.scaleX < 0)\n                        that.node.scaleX *= -1;\n\n                    if (!that._walk) {\n                        that.spine.setAnimation(0, \"walking fast\", true);\n                        that._walk = true;\n                    }\n                }\n                else if (keyCode == cc.KEY.d && !that.msgBox.active) {\n                    that.goRight = true;\n                    that.goLeft = false;\n                    if (that.node.scaleX > 0)\n                        that.node.scaleX *= -1; \n\n                    if (!that._walk) {\n                        that.spine.setAnimation(0, \"walking fast\", true);\n                        that._walk = true;\n                    }\n                }\n                else if (keyCode == cc.KEY.space && !that.msgBox.active) {\n                    if (!that.jump) {\n                        that.jump = true;\n                    }\n                }\n                else if (keyCode == cc.KEY.e) {\n                    if (that.interact) {\n                        if (!that.msgBox.active) {\n                            // disable movements\n                            that.goLeft = false;\n                            that.goRight = false;\n                            that.jump = false;\n                            that.spine.setAnimation(0, \"idel\", true);\n\n                            switch (that.curItem) {\n                                case \"Generator\": \n                                    if (that.items.generator.state == 0) {\n                                        that.items.generator.state = 1;\n                                        that.items.portal.state = 2;\n                                        // Change active sprites\n                                        that.generator.spriteFrame = that.room1Sprites[0];\n                                        setTimeout(() => {\n                                            that.bulb.node.y = -305;\n                                            that.bulb.spriteFrame = that.room1Sprites[1];\n                                        }, 1500);\n                                        setTimeout(() => {\n                                            that.portal.spriteFrame = that.room1Sprites[2];\n                                        }, 2300);\n                                    }\n                                    else {\n                                        that.msgBox.active = true;\n                                        that.msgLabel.string = \"Unlimited power.............\";\n                                    }\n                                    break;\n                                case \"Picture\": \n                                    if (that.items.picture.state == 0) {\n                                        that.msgBox.active = true;\n                                        that.msgLabel.string = \"I see.... the picture is a switch. I wonder what it did after I switched it on....\";\n                                        // Change portal and drawer states\n                                        that.items.picture.state = 1;\n                                        // Unlock underground\n                                        that.underDoor.active = false;\n                                        // Rotate the picture\n                                        var toRight = new cc.rotateBy(1, 15);\n                                        that.picture.runAction(toRight);\n                                    }\n                                    else {\n                                        that.msgBox.active = true;\n                                        that.msgLabel.string = \"Jeeze.. the woman in the picture looks like my mother!\";\n                                    }\n                                    break;\n                                case \"Portal\": \n                                    if (that.items.portal.state == 0) {\n                                        that.msgBox.active = true;\n                                        that.msgLabel.string = \"Wow... a portal! My way out! But it's blocking me. I need something to offer to it...\";\n                                    }\n                                    else if (that.items.portal.state == 1) {\n                                        that.msgBox.active = true;\n                                        that.msgLabel.string = \"The portal still does not have enough power.....\";\n                                    }\n                                    else {\n                                        // Pass the room\n                                        if (that.items.portal.state == 2 && that.items.drawer.state == 1) {\n                                            // You have won this room\n                                            that.scheduleOnce(that.changeScene, 1);\n                                        }\n                                        else {\n                                            that.msgBox.active = true;\n                                            that.msgLabel.string = \"I still need something to offer to the portal....\";\n                                        }\n                                    }\n                                    break;\n                                case \"Drawer\": \n                                    if (that.items.drawer.state == 0) {\n                                        that.msgBox.active = true;\n                                        that.msgLabel.string = \"Yes! I found a portal stone! This should do it...\";\n                                        // Change portal and drawer states\n                                        if (that.items.portal.state < 2)\n                                            that.items.portal.state = 1;\n                                        that.items.drawer.state = 1;\n                                    }\n                                    else {\n                                        that.msgBox.active = true;\n                                        that.msgLabel.string = \"Nothing of interest here....\";\n                                    }\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                        else {\n                            that.msgLabel.string = \"\";\n                            that.msgBox.active = false;\n                        }\n                    }\n                }\n            },\n\n            onKeyReleased: function(keyCode, event) {\n                if (keyCode == cc.KEY.a && !that.msgBox.active) {\n                    that.goLeft = false;\n\n                    if (that._walk) {\n                        that.spine.setAnimation(0, \"idel\", true);\n                        that._walk = false;\n                    }\n                }\n                else if (keyCode == cc.KEY.d && !that.msgBox.active) {\n                    that.goRight = false;\n\n                    if (that._walk) {\n                        that.spine.setAnimation(0, \"idel\", true);\n                        that._walk = false;\n                    }\n                }\n                else if (keyCode == cc.KEY.space && !that.msgBox.active) {\n                    if (!that.jump) {\n                        that.jump = false;\n                    }\n                }\n            },\n        }, this.node);\n    },\n\n\n    onCollisionEnter: function (other) {\n        var group = cc.game.groupList[other.node.groupIndex];\n        if (group == \"Interact\") {\n            this.interact = true;\n            this.excalm.active = true;\n            this.curItem = other.node.name;\n        }\n    },\n\n\n    onCollisionExit: function(other) {\n        var group = cc.game.groupList[other.node.groupIndex];\n        if (group == \"Interact\") {\n            this.interact = false;\n            this.excalm.active = false;\n            this.curItem = \"\";\n        }\n    },\n    \n\n    update: function (dt) {\n        // -454 //833\n        if (this.goLeft && this.node.x > this.bLeft) {\n            this.node.x -= this.speedX * dt;\n        }\n        else if (this.goRight && this.node.x < this.bRight) {\n            this.node.x += this.speedX * dt;\n        }\n        \n        if (this.jump && this.node.y < this.bTop) {\n            var v2 = cc.v2(0, (200 * dt * 50));\n            this.jump = false;\n            this.body.linearVelocity = v2;\n            cc.log(this.body.linearVelocity);\n        }\n    },\n\n    changeScene : function(){\n        cc.director.loadScene('Rocket');\n    },\n});\n"]}